---
header-includes:
  - \usepackage{titling}
  - \pretitle{\vspace{-1.77cm}\begin{center}\Large}
  - \posttitle{\end{center}}
title: |
  | dPsi Non-Linear Analysis
author: "Joy Bao-Dai, Aimi Wen, Emily Zhao"
geometry: "left=2cm,right=2cm,top=2cm,bottom=2cm"
fontsize: 11pt
date: "2024-04-03"
output:
  pdf_document:
    includes:
      in_header: header.tex
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = TRUE, message = TRUE, echo = TRUE)
```


```{r}

library(tidyverse)
library(data.table)
library(ggplot2)
library(purrr)
library(dplyr)
library(nlme)
library(broom)

```

```{r}
load("~/projects/mitochondria/data/metabolicAssay.RData")
dPsi <- dPsi[dPsi$dose != -12.95, ]

dPsi <- dPsi[!is.na(dPsi$y), ]
dPsi$dose <- as.numeric(dPsi$dose)
dPsi$pair <- as.factor(dPsi$pair)

dPsi_GM <- subset(dPsi, substrate == "GM")

```

```{r}

g <- ggplot(data = dPsi_GM, aes(x = dose, y = y)) + geom_point()
g

```


```{r}

fit1 <- nls(y ~ SSmicmen(dose, Vm, K), data = dPsi_GM)

g + stat_function(fun = SSmicmen, args = list(Vm = tidy(fit1)$estimate[1],
                                       K=tidy(fit1)$estimate[2]), 
                  colour = "darkgreen")
```

```{r}

fit2 <- nls(y ~ SSasymp(dose, init, m, plateau), data = dPsi_GM)


# g + stat_function(fun = SSasymp, args = list(init = tidy(fit2)$estimate[1],
#                                        m=tidy(fit2)$estimate[2], plateau=tidy(fit2)$estimate[3]),
#                   colour = "darkgreen")

# Assuming your independent variable is named 'x'
# x_vals <- seq(min(dPsi_GM$dose), max(dPsi_GM$dose), length.out = 60)
x_vals <- c(rep(2, 12), rep(3, 12), rep(4, 12), rep(5, 12), rep(6, 12))

predictions <- data.frame(x = x_vals)

# Use the predict function with your model and new data
# Note: You might need to adjust this part to fit your specific model and data structure
predictions$y <- predict(fit2, newdata = list(x = x_vals))

g2 <- ggplot(dPsi_GM, aes(x = dose, y = y)) +
  geom_point() +  # Plot the original data points
  geom_smooth(data = predictions, aes(x = x, y = y), colour = "darkgreen") +  # Add the model curve
  theme_minimal()

g2
```


```{r}
plot(fit1, geno ~ resid(.), abline = 0)

# the residuals are mostly negative for NT and mostly positive for Tg giving strong evidence that a "genotype" effect should be included in the model
```

```{r}
plot(fit1, pair ~ resid(.), abline = 0)

#There does not seem to be a pattern correlation of pair and the response as the residuals are both positive and negative for all pairs, so we'll apply pair as a random effect if possible
```

```{r}

fit3.nlsList <- nlsList(y ~ SSmicmen(dose, Vm, K)|substrate, data = dPsi)

plot( fit3.nlsList, id = 0.05, adj = -1 ) # Figure 6.7
qqnorm( fit3.nlsList, abline = c(0,1) ) #Figure 8.12

summary(fit3.nlsList)


```

```{r}

## converting nlsList into nlme so we can add random effect later
## nlme output also indicates AIC/BIC values
fit3.nlme <- nlme(fit3.nlsList)
summary(fit3.nlme)


```




```{r}

typeof(dPsi$pair) 
## adding the random effect

##trying to add the random effect but it currently says there's not meanin
fit3.nlme <- update(fit3.nlme, groups = ~pair)
summary(fit3.nlme)

```

```{r}


# anova( fit3.nlme, fm2Indom.nlme ), page 284
```

