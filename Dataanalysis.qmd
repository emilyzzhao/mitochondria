---
header-includes:
  - \usepackage{titling}
  - \pretitle{\vspace{-1.77cm}\begin{center}\Large}
  - \posttitle{\end{center}}
title: |
  | dPsi Data Analysis
author: "Emily Zhao"
geometry: "left=2cm,right=2cm,top=2cm,bottom=2cm"
fontsize: 11pt
date: "2024-03-27"
output:
  pdf_document:
    includes:
      in_header: header.tex
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = TRUE, message = TRUE, echo = TRUE)
```

```{r}

library(tidyverse)
library(data.table)
library(ggplot2)
library(purrr)
library(dplyr)
library(nlme)

```

```{r}

#load("~/projects/mitochondria/data/metabolicAssay.RData")

load("~/OneDrive - Duke University/* SPRING 2024/STA 470S/mitochondria/data/metabolicAssay.RData")

dPsi <- dPsi[dPsi$dose != -12.95, ]

dPsi <- dPsi[!is.na(dPsi$y), ]



```

### Visualizations

```{r}
ggplot(dPsi, aes(x = dose, y = y, color = substrate)) +
  geom_point() +
  labs(x = "Dose", y = "dPsi",
       title = "Scatterplot of dPsi vs. Dose")
```

```{r}

dPsi_GM <- subset(dPsi, substrate == "GM")
dPsi_GM <- subset(dPsi, substrate == "PM")


# pop.mod <- nls(y~a(c-(c-1)*exp(dose/b))),
# + start=list(theta1 = 400, theta2 = -49, theta3 = 0.025),
# + data=dPsi_Tg1, trace=TRUE)
# 
# 
# pop.mod <- nls(y~a(c-(c-1)*exp(dose/b))),
# + start=list(theta1 = 400, theta2 = -49, theta3 = 0.025),
# + data=dPsi_Tg1, trace=TRUE)

```

```{r}
# pop.mod <- nls(y ~ SSlogis(dose, phi1, phi2, phi3), data = dPsi_Tg1)
```

```{r}

ggplot(dPsi_GM, aes(x = dose, y = y, color = geno)) +
  geom_point() +
  labs(x = "Dose", y = "dPsi",
       title = "Scatterplot of dPsi vs. Dose for substrate GM")
```

```{r}
library(lme4)
```

### Model specifications

```{r}

model1 <- lmer(y ~ dose:substrate + (1|pair), data = dPsi)

#model_PM <- lmer(y ~ geno:dose + (1|pair), data = dPsi_PM)

summary(model1)

model2 <- lmer(y ~ geno:dose:substrate + (1|pair), data = dPsi)

summary(model2)

library(car)

```

```{r}
# Assuming 'dPsi' is your dataframe

fixed_effects <- fixef(model2)


ggplot(data = dPsi, aes(x = dose, y = y, color = geno)) +
  geom_point() +
  facet_wrap(~substrate)+
  geom_smooth(method = "lm", se = FALSE) +  # Add linear trend lines
  labs(x = "Dose", y = "y", title = "Scatterplot by Substrate with Trend Lines") +
  theme_minimal()

```

```{r}
plot(model2)

```

# 

```{r}
model3 <- lmer(y~substrate:poly(dose,2):geno + (1|pair), data = dPsi)

summary(model3)
```

```{r}
plot(model3)
```

```{r}
model4 <- lmer(y ~ -1 + substrate:poly(dose,2) + (1|pair), data = dPsi)
summary(model4)
```

### pbkr

```{r}
# load package
library(pbkrtest)
```

Model 1 vs. Model 2: model 2 wins

```{r}
# likelihood ratio test
lrt_result_12 <- KRmodcomp(model2, model1)

lrt_result_12
```

-   difference in \# of parameters between models (ndf) = 10

-   p-value = \< 2.2e-16

    -   highly significant -\> inclusion of geno term significantly improves fit of model over model1

Model 3 vs. Model 4: model 3 wins

```{r}
lrt_result_34 <- KRmodcomp(model4, model3)
lrt_result_34
```

-   p-value = \< 2.2e-16

    -   highly significant -\> inclusion of gennotype term significantly improves fit of model over model1

### GAM

```{r}
library(mgcv)

dPsi$dose <- as.numeric(dPsi$dose)
dPsi$substrate <- as.factor(dPsi$substrate)
dPsi$geno <- as.factor(dPsi$geno)

gam_model <- gam(y ~ dose:substrate:geno + s(pair, bs = "re"), data = dPsi)

summary(gam_model)
```

```{r}
plot(gam_model)
```

```{r}

# Provide initial parameter estimates
initial_params <- list(a = 170, b = 120, c = -14.19, d = 6)

# not working, either if there's initial params or removed, nothing is working
# Fit the model with initial parameter estimates
#self_start_model <- nls(as.numeric(y) ~ SSfpl(as.numeric(dose), a, b, c, d)|geno, data = dPsi_GM, start = initial_params)



#selfstartmodel1 <- nls(y~SSgompertz(as.numeric(dose), Asym=170, b2, b3)|geno, data=dPsi_GM)


```

plot(density \~ log(conc), DNase.1, \# xlim = c(0, 21), main = "SSgompertz() fit to DNase.1") ux \<- par("usr")\[1:2\]; x \<- seq(ux\[1\], ux\[2\], length.out=250) lines(x, do.call(SSgompertz, c(list(x=x), coef(fm1))), col = "red", lwd=2) As \<- coef(fm1)\[\["Asym"\]\]; abline(v = 0, h = 0, lty = 3) axis(2, at= exp(-coef(fm1)\[\["b2"\]\]), quote(e\^{-b\[2\]}), las=1, pos=0)
